# Generated by Django 3.2 on 2023-11-24 20:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(help_text='Ingredient quantity', validators=[django.core.validators.MinValueValidator(limit_value=0.01, message='The quantity of the ingredient cannot be equal to or less than 0')], verbose_name='Quantity')),
            ],
            options={
                'verbose_name': 'Ingredient with quantities',
                'verbose_name_plural': 'Ingredients with quantities',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='IngredientRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient', models.ForeignKey(help_text='Ingredient', on_delete=django.db.models.deletion.CASCADE, to='meals.ingredient', verbose_name='Ingredient')),
            ],
            options={
                'verbose_name': 'IngredientRecipe',
                'verbose_name_plural': 'IngredientRecipe',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name, maximum 200 characters', max_length=200, verbose_name='Name')),
                ('measurement_unit', models.CharField(help_text='Units of measurement, maximum 200 characters', max_length=200, verbose_name='Unit')),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name, maximum 200 characters', max_length=200, verbose_name='Name')),
                ('image', models.ImageField(help_text='Link to picture', upload_to='recipes/images/', verbose_name='Picture')),
                ('text', models.TextField(help_text='Recipe description', verbose_name='Description')),
                ('cooking_time', models.PositiveSmallIntegerField(help_text='Cooking time (minutes)', validators=[django.core.validators.MinValueValidator(limit_value=1, message='Cooking time cannot be less than 1 minute')], verbose_name='Cooking time')),
                ('author', models.ForeignKey(help_text='Author of the recipe', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('ingredients', models.ManyToManyField(help_text='List of ingredients', through='meals.IngredientRecipe', to='meals.Ingredient', verbose_name='Ingredients')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name, maximum 200 characters', max_length=200, verbose_name='Name')),
                ('color', models.CharField(default=None, help_text='Color in HEX, maximum 7 characters, first character "#"', max_length=7, verbose_name='Color')),
                ('slug', models.SlugField(help_text='Unique slug, maximum 200 characters', max_length=200, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='TagRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Recipe', on_delete=django.db.models.deletion.CASCADE, to='meals.recipe', verbose_name='Recipe')),
                ('tag', models.ForeignKey(help_text='Tag', on_delete=django.db.models.deletion.CASCADE, to='meals.tag', verbose_name='Tag')),
            ],
            options={
                'verbose_name': 'TagRecipe',
                'verbose_name_plural': 'TagRecipe',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Recipe', on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to='meals.recipe', verbose_name='Recipe')),
                ('user', models.ForeignKey(help_text='User', on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'ShoppingCart',
                'verbose_name_plural': 'ShoppingCarts',
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(help_text='List of tags', related_name='recipes', through='meals.TagRecipe', to='meals.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='ingredientrecipe',
            name='recipe',
            field=models.ForeignKey(help_text='Recipe', on_delete=django.db.models.deletion.CASCADE, to='meals.recipe', verbose_name='Recipe'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='product',
            field=models.ForeignKey(help_text='Ingredient', on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='meals.product', verbose_name='Ingredient'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Recipe', on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='meals.recipe', verbose_name='Recipe')),
                ('user', models.ForeignKey(help_text='User', on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Favorite',
                'verbose_name_plural': 'Favorites',
                'ordering': ('-id',),
            },
        ),
    ]
